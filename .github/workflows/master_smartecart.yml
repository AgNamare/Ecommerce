name: Build and Deploy MERN Stack

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  NODE_ENV: production
  WEBSITE_NODE_DEFAULT_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - uses: actions/checkout@v4

    # Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    # Install dependencies
    - name: Install root dependencies
      run: npm install

    - name: Install client dependencies
      run: npm install
      working-directory: client

    - name: Install admin dependencies
      run: npm install
      working-directory: admin

    - name: Install server dependencies
      run: npm install
      working-directory: server

    # Build applications
    - name: Build client
      run: npm run build
      working-directory: client

    - name: Build admin
      run: npm run build
      working-directory: admin

    - name: Build server
      run: npm run build
      working-directory: server

    # Verify builds
    - name: Verify client build
      run: ls -la
      working-directory: client/dist

    - name: Verify admin build
      run: ls -la
      working-directory: admin/dist

    # Prepare deployment package
    - name: Create deployment package
      run: |
        mkdir -p deployment-package
        cp -r server/dist/* deployment-package/
        cp server/package.json deployment-package/
        cp server/package-lock.json deployment-package/
        
        # Create public directory structure
        mkdir -p deployment-package/public
        cp -r client/dist/* deployment-package/public/app/
        cp -r admin/dist/* deployment-package/public/admin/
        
        echo "Deployment package contents:"
        ls -la deployment-package

    # Deploy to Azure
    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3C6293E2CF044177A7743A13946B94CA }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F80D5EA40E3B4EE9B55C6E12A6AD5D84 }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DDF609657E0740BE9339F398DFD5CC9E }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'SmartEcart'
        slot-name: 'Production'
        package: 'deployment-package'
        clean: true
        scm-type: none

    # Verify deployment
    - name: Verify client deployment
      run: |
        echo "Testing client app at ${{ steps.deploy-to-webapp.outputs.webapp-url }}/app"
        curl -s ${{ steps.deploy-to-webapp.outputs.webapp-url }}/app | grep "root" || echo "Client app verification failed"

    - name: Verify admin deployment
      run: |
        echo "Testing admin app at ${{ steps.deploy-to-webapp.outputs.webapp-url }}/admin"
        curl -s ${{ steps.deploy-to-webapp.outputs.webapp-url }}/admin | grep "root" || echo "Admin app verification failed"